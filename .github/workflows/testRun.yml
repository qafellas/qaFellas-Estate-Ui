name: Webdriverio UI Tests
run-name: 🚀 Webdriverio UI Tests - ${{ github.run_number }} - ${{ github.event_name }}
on:
  push:
     branches: [ master ]
  schedule:
    - cron: '0 5 * * 4'

permissions: #write-all
  id-token: write
  contents: write
  checks: write
  actions: read


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  webdriverio-tests:
    runs-on: ubuntu-latest
    steps:

      - name: 🛎️ Checkout the code
        uses: actions/checkout@v3

      - name : 🛠️ Setup the node env
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name : ⚙️ Install the dependencies
        run : npm install

      - name : 🧪 Run wdio test scripts
        run : |
          npm run wdio

      - name: 📈 Convert wdio json to mocha json
        if: always()
        run: node test/utils/jsonConverter.js

      - name: 📈 Merge mocha jsons
        if: always()
        run: node test/utils/mergeJson.js

      - name: 🧪✅❌ Test Report
        id: test_report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed.
        with:
          name: 🧪📊 WebdriverIO Tests          # Name of the check run which will be created
          path: testResults.json    # Path to test results
          reporter: mocha-json
          max-annotations: '30'

      - name: 🔗 Read Test Report URL
        if: always()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Available outputs:"
          echo "${{ toJSON(steps.test_report.outputs) }}"
          echo "Check run URL: ${{ steps.test_report.outputs.url }}"
          echo "TEST_RUN_HTML=${{ steps.test_report.outputs.url_html }}" | tee -a $GITHUB_ENV
          

      - name: 🔔📣 Send  JSON report to Slack
        if: always()
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
                payload-file-path: "./jsonReporter.json"
        env:
              SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
              SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
